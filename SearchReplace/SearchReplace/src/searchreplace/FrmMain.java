/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package searchreplace;

import java.awt.Font;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author arosi
 */
public class FrmMain extends javax.swing.JFrame {

    DefaultComboBoxModel<String> combomodel = new DefaultComboBoxModel();
    DefaultComboBoxModel<String> comboSearchmodel = new DefaultComboBoxModel();
    DefaultComboBoxModel<String> comboReplaceModel = new DefaultComboBoxModel();
    DefaultListModel<String> inputmodel = new DefaultListModel();
    DefaultListModel<String> outputmodel = new DefaultListModel();

    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();
        comboFiles.setModel(combomodel);
        listInput.setModel(inputmodel);
        listOutput.setModel(outputmodel);
        comboSearch.setModel(comboSearchmodel);
        comboReplace.setModel(comboReplaceModel);
        registerListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        radioFullLine = new javax.swing.JRadioButton();
        radioLineStart = new javax.swing.JRadioButton();
        radioSomewhere = new javax.swing.JRadioButton();
        checkCaseSensitive = new javax.swing.JCheckBox();
        checkWholeWord = new javax.swing.JCheckBox();
        buttonSearch = new javax.swing.JButton();
        checkLineNumber = new javax.swing.JCheckBox();
        comboSearch = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        comboFiles = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listInput = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        radioSelectedLine = new javax.swing.JRadioButton();
        radioAllLines = new javax.swing.JRadioButton();
        buttonReplace = new javax.swing.JButton();
        checkAllInOne = new javax.swing.JCheckBox();
        comboReplace = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listOutput = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        checkFont = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuNew = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuSearch = new javax.swing.JMenuItem();
        menuReplace = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SearchReplace");
        setMinimumSize(new java.awt.Dimension(650, 596));
        getContentPane().setLayout(new java.awt.GridLayout(0, 1));

        jPanel1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 10));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 125));

        jLabel2.setText("<html> Suchen <br> nach: </html>"); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "wo in der Zeile"));

        buttonGroup1.add(radioFullLine);
        radioFullLine.setText("ganze Zeile");
        radioFullLine.setEnabled(false);
        radioFullLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFullLineActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioLineStart);
        radioLineStart.setText("Zeilenanfang");
        radioLineStart.setEnabled(false);
        radioLineStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioLineStartActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioSomewhere);
        radioSomewhere.setSelected(true);
        radioSomewhere.setText("irgendwo in der Zeile");
        radioSomewhere.setEnabled(false);
        radioSomewhere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSomewhereActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioFullLine, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioLineStart, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioSomewhere))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioFullLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioLineStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radioSomewhere))
        );

        checkCaseSensitive.setText("Gro√ü/Kleinschreibung beachten");
        checkCaseSensitive.setEnabled(false);

        checkWholeWord.setText("nur ganzes Wort suchen");
        checkWholeWord.setEnabled(false);

        buttonSearch.setText("Suchen");
        buttonSearch.setEnabled(false);
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        checkLineNumber.setText("Zeilennummern anzeigen");
        checkLineNumber.setEnabled(false);

        comboSearch.setEditable(true);
        comboSearch.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboSearch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkWholeWord)
                                    .addComponent(checkLineNumber))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                                .addComponent(buttonSearch))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(checkCaseSensitive, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkCaseSensitive)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkWholeWord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonSearch)
                            .addComponent(checkLineNumber))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel4.setPreferredSize(new java.awt.Dimension(500, 100));

        comboFiles.setEditable(true);
        comboFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFilesActionPerformed(evt);
            }
        });

        jLabel1.setText("Datei:");

        jButton1.setText("Open");
        jButton1.setToolTipText("Open a file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listInput);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboFiles, 0, 443, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(10, 10, 10))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1);

        jPanel2.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel2.setLayout(new java.awt.BorderLayout(0, 10));

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel5.setPreferredSize(new java.awt.Dimension(500, 100));

        jLabel3.setText("<html>\nErsetzen\n<br>\ndurch:\n</html>");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "wo in der Zeile"));

        buttonGroup2.add(radioSelectedLine);
        radioSelectedLine.setSelected(true);
        radioSelectedLine.setText("in den markierten Zeilen");
        radioSelectedLine.setEnabled(false);

        buttonGroup2.add(radioAllLines);
        radioAllLines.setText("in allen Zeilen");
        radioAllLines.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(radioAllLines, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(radioSelectedLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioSelectedLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioAllLines)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonReplace.setText("Ersetzen");
        buttonReplace.setEnabled(false);
        buttonReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReplaceActionPerformed(evt);
            }
        });

        checkAllInOne.setText("alle in einer Zeile");
        checkAllInOne.setEnabled(false);

        comboReplace.setEditable(true);
        comboReplace.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(checkAllInOne)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addComponent(buttonReplace))
                    .addComponent(comboReplace, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboReplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonReplace)
                            .addComponent(checkAllInOne))))
                .addContainerGap())
        );

        jPanel2.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel6.setPreferredSize(new java.awt.Dimension(300, 99));

        jLabel4.setText("Resultat:");

        jScrollPane2.setViewportView(listOutput);

        jButton4.setText("Beenden");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerform(evt);
            }
        });

        buttonSave.setText("Speichern unter");
        buttonSave.setActionCommand("");
        buttonSave.setEnabled(false);
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        checkFont.setText("Proportionalschrift");
        checkFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFontActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(checkFont, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                        .addComponent(buttonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(jButton4)
                    .addComponent(checkFont)))
        );

        jPanel2.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2);

        jMenu1.setText("File");

        menuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuNew.setText("Neu");
        jMenu1.add(menuNew);
        jMenu1.add(jSeparator1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("√ñffnen");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuSave.setText("Speichern");
        menuSave.setEnabled(false);
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jMenu1.add(menuSave);
        jMenu1.add(jSeparator2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem4.setText("Beenden");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerform(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Bearbeiten");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        menuSearch.setText("Suchen");
        menuSearch.setEnabled(false);
        menuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });
        jMenu2.add(menuSearch);

        menuReplace.setText("Ersetzen");
        menuReplace.setEnabled(false);
        menuReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReplaceActionPerformed(evt);
            }
        });
        jMenu2.add(menuReplace);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Info");

        menuAbout.setLabel("√úber...");
        menuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutActionPerformed(evt);
            }
        });
        jMenu3.add(menuAbout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboFilesActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        if (inputmodel.size() == 0) {
            return;
        }

        addSearchItemToCombo();

        outputmodel.clear();
        for (int i = 0; i < inputmodel.getSize(); i++) {
            String text = inputmodel.getElementAt(i);
            if (validText(text)) {
                if (checkLineNumber.isSelected()) {
                    text = (i + 1) + ". " + text;
                }
                outputmodel.addElement(text);
            }
        }

    }//GEN-LAST:event_buttonSearchActionPerformed

    private void addSearchItemToCombo() {
        String itm = (String) comboSearch.getEditor().getItem();
        for (int i = 0; i < comboSearchmodel.getSize(); i++) {
            if (comboSearchmodel.getElementAt(i).equals(itm)) {
                return;
            }
        }
        comboSearchmodel.addElement(itm);

    }

    private boolean validText(String text) {
        String checkText = (String) comboSearchmodel.getSelectedItem();
        if (!checkCaseSensitive.isSelected()) {
            checkText = checkText.toLowerCase();
            text = text.toLowerCase();
        }

        if (checkWholeWord.isSelected()) {
            String[] splitted = text.split(" ");
            if (radioLineStart.isSelected()) {
                return splitted[0].equals(checkText);
            } else if (radioSomewhere.isSelected()) {
                for (String s : splitted) {
                    if (s.equals(checkText)) {
                        return true;
                    }
                }
                return false;
            } else {
                return text.equals(checkText);
            }

        }

        //Implement Full Word
        if (radioLineStart.isSelected()) {
            return text.startsWith(checkText);
        } else if (radioFullLine.isSelected()) {
            return text.equals(checkText);
        } else {
            return text.contains(checkText);
        }

    }

    private void addReplaceItemToCombo() {
        String itm = (String) comboReplace.getEditor().getItem();
        for (int i = 0; i < comboReplaceModel.getSize(); i++) {
            if (comboReplaceModel.getElementAt(i).equals(itm)) {
                return;
            }
        }
        comboReplaceModel.addElement(itm);

    }

    private String getReplaceText() {
        String text = (String) comboReplace.getEditor().getItem();

        return text;
    }

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (outputmodel.getSize() == 0) {
            return;
        }

        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileFilter() {
            @Override
            public String getDescription() {
                return "Text-Files";
            }

            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().endsWith(".txt");
            }

        });

        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedWriter writer = new BufferedWriter(new FileWriter(fc.getSelectedFile()));

                for (int i = 0; i < outputmodel.getSize(); i++) {
                    writer.write(outputmodel.getElementAt(i) + "\n");
                }

                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_saveActionPerformed

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().endsWith(".txt");
            }

            @Override
            public String getDescription() {
                return "Text-Files";
            }

        });

        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            for (int i = 0; i < combomodel.getSize(); i++) {
                if (combomodel.getElementAt(i).equals(fc.getSelectedFile().getAbsolutePath())) {
                    return;
                }
            }

            combomodel.addElement(fc.getSelectedFile().getAbsolutePath());
            combomodel.setSelectedItem(combomodel.getElementAt(combomodel.getSize() - 1));
        }

    }//GEN-LAST:event_openFileActionPerformed

    private void exitActionPerform(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerform
        System.exit(0);
    }//GEN-LAST:event_exitActionPerform

    private void checkFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFontActionPerformed
        if (checkFont.isSelected()) {
            listOutput.setFont(new Font("Calibri", Font.PLAIN, 10));
        } else {
            listOutput.setFont(new Font("Arial", Font.PLAIN, 10));
        }
        
    }//GEN-LAST:event_checkFontActionPerformed

    private void menuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutActionPerformed
        JOptionPane.showMessageDialog(this, "<html>SearchReplace<br>Version 1.0.0</html>", 
                "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuAboutActionPerformed

    private void buttonReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReplaceActionPerformed
        if (outputmodel.size() == 0) {
            return;
        }

        addReplaceItemToCombo();

        if (radioAllLines.isSelected()) {
            for (int i = 0; i < outputmodel.size(); i++) {
                if (checkAllInOne.isSelected()) {
                    outputmodel.set(i, outputmodel.get(i).replace((String) 
                            comboSearchmodel.getSelectedItem(), getReplaceText()));
                } else {
                    outputmodel.set(i, outputmodel.get(i).replaceFirst((String)
                            comboSearchmodel.getSelectedItem(), getReplaceText()));

                }
            }
        } else {
            if (comboSearch.getSelectedItem() == null) {
                return;
            }

            for (int i : listOutput.getSelectedIndices()) {
                if (checkAllInOne.isSelected()) {
                    outputmodel.set(i,
                            listOutput.getSelectedValuesList().get(i).replace((String) 
                                    comboSearchmodel.getSelectedItem(), getReplaceText()));
                } else {
                    outputmodel.set(i,
                            listOutput.getSelectedValuesList().get(i).replaceFirst((String) 
                                    comboSearchmodel.getSelectedItem(), getReplaceText()));
                }
            }
        }
    }//GEN-LAST:event_buttonReplaceActionPerformed

    private void radioFullLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFullLineActionPerformed
        setFullWord();
    }//GEN-LAST:event_radioFullLineActionPerformed

    private void radioLineStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioLineStartActionPerformed
        setFullWord();
    }//GEN-LAST:event_radioLineStartActionPerformed

    private void radioSomewhereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSomewhereActionPerformed
        setFullWord();
    }//GEN-LAST:event_radioSomewhereActionPerformed

    private void setFullWord() {
        checkWholeWord.setEnabled(!radioFullLine.isSelected());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    public void registerListeners() {

        JTextField replaceTextField = (JTextField) comboReplace.getEditor().getEditorComponent();

        replaceTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                setButton();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                setButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setButton();
            }

            private void setButton() {
                buttonReplace.setEnabled(!replaceTextField.getText().isEmpty());
                menuReplace.setEnabled(buttonReplace.isEnabled());
            }

        });

        comboSearch.addItemListener((ItemEvent e) -> {
            buttonSearch.setEnabled(((String) comboSearch.getEditor().getItem()).length() != 0);
            menuSearch.setEnabled(buttonSearch.isEnabled());
        });

        JTextField searchTextField = (JTextField) comboSearch.getEditor().getEditorComponent();

        searchTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                setButton();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                setButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setButton();
            }

            private void setButton() {
                buttonSearch.setEnabled(!searchTextField.getText().isEmpty());
                menuSearch.setEnabled(buttonSearch.isEnabled());

            }

        });

        outputmodel.addListDataListener(new ListDataListener() {
            @Override
            public void contentsChanged(ListDataEvent e) {
                setButton();

            }

            @Override
            public void intervalAdded(ListDataEvent e) {
                setButton();

            }

            @Override
            public void intervalRemoved(ListDataEvent e) {
                setButton();

            }

            private void setButton() {
                buttonSave.setEnabled(!outputmodel.isEmpty());
                menuSave.setEnabled(!outputmodel.isEmpty());
            }

        });

        comboFiles.addItemListener((ItemEvent e) -> {

            inputmodel.clear();

            try {
                BufferedReader reader = new BufferedReader(new FileReader((String) e.getItem()));

                String line;

                while ((line = reader.readLine()) != null) {
                    inputmodel.addElement(line);
                }

                reader.close();

                comboSearch.setEnabled(true);
                comboReplace.setEnabled(true);

                checkCaseSensitive.setEnabled(true);
                checkLineNumber.setEnabled(true);
                checkWholeWord.setEnabled(true);
                checkAllInOne.setEnabled(true);

                radioAllLines.setEnabled(true);
                radioFullLine.setEnabled(true);
                radioLineStart.setEnabled(true);
                radioSomewhere.setEnabled(true);
                radioSelectedLine.setEnabled(true);

            } catch (IOException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonReplace;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JCheckBox checkAllInOne;
    private javax.swing.JCheckBox checkCaseSensitive;
    private javax.swing.JCheckBox checkFont;
    private javax.swing.JCheckBox checkLineNumber;
    private javax.swing.JCheckBox checkWholeWord;
    private javax.swing.JComboBox<String> comboFiles;
    private javax.swing.JComboBox<String> comboReplace;
    private javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JList<String> listInput;
    private javax.swing.JList<String> listOutput;
    private javax.swing.JMenuItem menuAbout;
    private javax.swing.JMenuItem menuNew;
    private javax.swing.JMenuItem menuReplace;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JMenuItem menuSearch;
    private javax.swing.JRadioButton radioAllLines;
    private javax.swing.JRadioButton radioFullLine;
    private javax.swing.JRadioButton radioLineStart;
    private javax.swing.JRadioButton radioSelectedLine;
    private javax.swing.JRadioButton radioSomewhere;
    // End of variables declaration//GEN-END:variables
}
